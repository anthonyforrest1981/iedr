<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="deposit">

    <resultMap id="internalDeposit" class="pl.nask.crs.payment.dao.ibatis.objects.InternalDeposit">
        <result property="nicHandleId" column="nicHandleId"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="nicHandleName" column="nicHandleName"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="transactionDate" column="transactionDate" />
        <result property="openBal" column="openBal"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.MonetaryBigDecimalHandler" />
        <result property="closeBal" column="closeBal"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.MonetaryBigDecimalHandler" />
        <result property="transactionAmount" column="transactionAmount"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.MonetaryBigDecimalHandler" />
        <result property="transactionType" column="transactionType"
            typeHandler="pl.nask.crs.payment.dao.ibatis.handlers.DepositTransactionTypeHandler" />
        <result property="orderId" column="orderId"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="correctorNH" column="correctorNH"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="remark" column="remark"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
    </resultMap>

    <sql id="selectDeposit">
        SELECT
        D.Nic_Handle as nicHandleId,
        N.NH_Name as nicHandleName,
        D.Trans_TS as transactionDate,
        D.Open_Bal as openBal,
        D.Close_Bal as closeBal,
        D.Order_ID as orderId,
        D.Trans_Amount as transactionAmount,
        D.Trans_Type as transactionType,
        D.Corrector_NH as correctorNH,
        D.Remark as remark
        FROM Deposit D
        LEFT JOIN NicHandle N ON (D.Nic_Handle =
        N.Nic_Handle)
    </sql>

    <select id="getLockedDepositByNicHandleId" parameterClass="java.lang.String" resultMap="common.normalizedString">
        SELECT
        Nic_Handle as nicHandleId
        FROM Deposit D
        WHERE
        Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        FOR UPDATE
    </select>

    <select id="getDepositByNicHandleId" parameterClass="string" resultMap="internalDeposit">
        <include refid="selectDeposit" />
        WHERE D.Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </select>

    <insert id="insertDeposit" parameterClass="pl.nask.crs.payment.dao.ibatis.objects.InternalDeposit">
        INSERT INTO Deposit
        (Nic_Handle,
        Trans_TS,
        Open_Bal,
        Close_Bal,
        Order_ID,
        Trans_Amount,
        Trans_Type,
        Corrector_NH,
        Remark
        ) VALUES (
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #transactionDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #openBal#,
        #closeBal#,
        #orderId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #transactionAmount#,
        #transactionType,handler=pl.nask.crs.payment.dao.ibatis.handlers.DepositTransactionTypeHandler#,
        #correctorNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #remark,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        )
    </insert>

    <update id="updateUsingHistory" parameterClass="long">
        UPDATE
        Deposit D
        LEFT JOIN NicHandle NHH ON NHH.Nic_Handle = D.Nic_Handle
        LEFT JOIN DepositHist DH ON DH.Nic_Handle_Chng_ID = NHH.Chng_ID
        SET
        D.Trans_TS = DH.Trans_TS,
        D.Open_Bal = DH.Open_Bal,
        D.Close_Bal = DH.Close_Bal,
        D.Order_ID = DH.Order_ID,
        D.Trans_Amount = DH.Trans_Amount,
        D.Trans_Type = DH.Trans_Type,
        D.Corrector_NH = DH.Corrector_NH,
        D.Remark = DH.Remark,
        D.Chng_ID = DH.Chng_ID
        WHERE DH.Chng_ID = #changeId#
    </update>

    <sql id="depositCriteria">
        <dynamic prepend="WHERE">
            <isNotNull prepend="and" property="criteria.nicHandleId">
                D.Nic_Handle =
                #criteria.nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.transactionDateFrom">
                DATE_FORMAT(D.Trans_TS, '%Y-%m-%d') >=
                DATE_FORMAT(#criteria.transactionDateFrom,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
                '%Y-%m-%d')
            </isNotNull>
            <isNotNull prepend="and" property="criteria.transactionDateTo">
                DATE_FORMAT(D.Trans_TS, '%Y-%m-%d') <![CDATA[<=]]>
                DATE_FORMAT(#criteria.transactionDateTo,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
                '%Y-%m-%d')
            </isNotNull>
            <isNotNull prepend="and" property="criteria.transactionType">
                D.Trans_Type =
                #criteria.transactionType,handler=pl.nask.crs.payment.dao.ibatis.handlers.DepositTransactionTypeHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.correctorNH">
                D.Corrector_NH=
                #criteria.correctorNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.accountBillNH">
                D.Nic_Handle =
                #criteria.accountBillNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
            </isNotNull>
        </dynamic>
    </sql>

    <select id="findDeposits" parameterClass="java.util.Map"
        resultMap="internalDeposit">
        <include refid="selectDeposit" />
        <include refid="depositCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="countFindDeposits" parameterClass="java.util.Map"
        resultClass="int">
        SELECT
        count(*) as cnt
        FROM Deposit D
        <include refid="depositCriteria" />
    </select>

</sqlMap>
