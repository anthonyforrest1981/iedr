<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="nicHandle">

    <resultMap id="internalNicHandle"
        class="pl.nask.crs.nichandle.dao.ibatis.objects.InternalNicHandle"
        groupBy="nicHandleId">
        <result property="nicHandleId" column="nicHandleId"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="name" column="name"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="accountNumber" column="accountNumber" />
        <result property="accountName" column="accountName"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="accountBillingContact" column="accountBillingContact"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="agreementSigned" column="agreementSigned"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
        <result property="ticketEdit" column="ticketEdit"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
        <result property="companyName" column="companyName"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.EmptyStringAsNullTypeHandler" />
        <result property="address" column="address"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="country" resultMap="country.countryResult" />
        <result property="county" resultMap="country.countyResult" />
        <result property="email" column="email"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="status" column="status"
            typeHandler="pl.nask.crs.nichandle.dao.ibatis.handlers.NicHandleStatusHandler" />
        <result property="statusChangeDate" column="statusChangeDate" />
        <result property="registrationDate" column="registrationDate" />
        <result property="changeDate" column="changeDate" />
        <result property="billCInd" column="billCInd"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
        <result property="nicHandleRemark" column="nicHandleRemark"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="creator" column="creator"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="vatNo" column="vatNo"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="telecoms" resultMap="nicHandle.telecoms" />
        <result property="vatCategory" column="vatCategory"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="exported" column="exported"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
    </resultMap>

    <resultMap id="telecoms"
        class="pl.nask.crs.nichandle.dao.ibatis.objects.Telecom">
        <result property="number" column="Telecom_number"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="type" column="Telecom_type"
            typeHandler="pl.nask.crs.nichandle.dao.ibatis.handlers.TelecomTypeHandler" />
        <result property="order" column="Telecom_order" />
    </resultMap>

    <sql id="nicHandleCriteria">
        <dynamic prepend="where">
            <isNotNull prepend="and" property="criteria.nicHandleId">
                NH.Nic_Handle
                like
                #criteria.nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.name">
                NH.NH_Name like
                #criteria.name,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.companyName">
                NH.Co_Name like
                #criteria.companyName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.email">
                NH.NH_Email like
                #criteria.email,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.accountNumber">
                NH.A_Number =
                #criteria.accountNumber#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainName">
                C.D_Name like
                #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.contactType">
                C.Type =
                #criteria.contactType,handler=pl.nask.crs.contacts.dao.ibatis.handlers.ContactTypeHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.address">
                NH.NH_Address
                like
                #criteria.address,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.countryId">
                Cntr.Id = #criteria.countryId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.countryName">
                Cntr.Name
                like
                #criteria.countryName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.countyId">
                Cnt.Id = #criteria.countyId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.countyName">
                Cnt.Name
                like
                #criteria.countyName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.phone">
                T.Phone like
                #criteria.phone,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
                AND T.Type = "Phone"
            </isNotNull>
            <isNotNull prepend="and" property="criteria.creator">
                NH.NH_Creator
                like
                #criteria.creator,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
        </dynamic>
    </sql>

    <sql id="nicHandleSelect">
        SELECT
        NH.Nic_Handle as nicHandleId,
        NH.NH_Name as name,
        NH.A_Number as accountNumber,
        A.A_Name as accountName,
        A.Billing_NH as accountBillingContact,
        A.Agreement_Signed as agreementSigned,
        A.Ticket_Edit as ticketEdit,
        NH.Co_Name as companyName,
        NH.NH_Address as address,
        T.Phone as Telecom_number,
        T.Type as Telecom_type,
        T.Order as Telecom_order,
        Cntr.Id as countryId,
        Cntr.Name as countryName,
        Cntr.vat_category as countryVatCategory,
        Cnt.Id as countyId,
        Cnt.Name as countyName,
        NH.NH_Email as email,
        NH.NH_Status as status,
        NH.NH_Status_TS as statusChangeDate,
        NH.NH_Reg_TS as registrationDate,
        NH.NH_Change_TS as changeDate,
        NH.NH_BillC_Ind as billCInd,
        NH.NH_Remark as nicHandleRemark,
        NH.NH_Creator as creator,
        NH.Vat_Reg_Id as vatNo,
        NH.Vat_Category as vatCategory,
        NH.NH_Exported as exported
        FROM
        NicHandle as NH
        LEFT OUTER JOIN Telecom T ON NH.Nic_Handle = T.Nic_Handle
        LEFT OUTER JOIN Account A ON NH.A_Number = A.A_Number
        LEFT OUTER JOIN Countries Cntr ON NH.Country_Id = Cntr.Id
        LEFT OUTER JOIN Counties Cnt ON NH.County_Id = Cnt.Id
    </sql>

    <sql id="dynamicContactTableJoin">
        <dynamic>
            <!-- no 'or', so we have to do it tricky -->
            <isNotNull property="criteria.domainName">
                <include refid="_dynamicContactTableJoin" />
            </isNotNull>
            <isNull property="criteria.domainName">
                <isNotNull property="criteria.contactType">
                    <include refid="_dynamicContactTableJoin" />
                </isNotNull>
            </isNull>
        </dynamic>
    </sql>

    <sql id="dynamicTelecomJoin">
        <isNotNull property="criteria.phone">
            LEFT JOIN Telecom T ON NH.Nic_Handle = T.Nic_Handle
        </isNotNull>
    </sql>

    <sql id="dynamicCountryJoin">
        <isNotNull property="criteria.countryId">
            <include refid="_dynamicCountryJoin" />
        </isNotNull>
        <isNull property="criteria.countryId">
            <isNotNull property="criteria.countryName">
                <include refid="_dynamicCountryJoin" />
            </isNotNull>
        </isNull>
        <isNotNull property="criteria.countyId">
            <include refid="_dynamicCountyJoin" />
        </isNotNull>
        <isNull property="criteria.countyId">
            <isNotNull property="criteria.countyName">
                <include refid="_dynamicCountyJoin" />
            </isNotNull>
        </isNull>
    </sql>

    <sql id="_dynamicContactTableJoin">
        LEFT OUTER JOIN Contact C ON NH.Nic_Handle = C.Contact_NH
    </sql>

    <sql id="_dynamicCountryJoin">
        LEFT JOIN Countries Cntr ON NH.Country_Id = Cntr.Id
    </sql>

    <sql id="_dynamicCountyJoin">
        LEFT JOIN Counties Cnt ON NH.County_Id = Cnt.Id
    </sql>

    <select id="getNicHandleByNicHandleId" parameterClass="string"
        resultMap="internalNicHandle">
        <include refid="nicHandle.nicHandleSelect" />
        WHERE NH.Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </select>

    <select id="getLockedNicHandleByNicHandleId" parameterClass="java.lang.String"
        resultMap="common.normalizedString">
        SELECT
        Nic_Handle
        FROM
        NicHandle
        WHERE
        Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        FOR UPDATE
    </select>

    <select id="findNicHandle" parameterClass="java.util.Map"
        resultMap="internalNicHandle">
        <include refid="nicHandle.nicHandleSelect" />
        <include refid="dynamicContactTableJoin" />
        <include refid="nicHandleCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="countTotalSearchResult" parameterClass="java.util.Map"
        resultClass="int">
        SELECT COUNT(*)
        FROM (
        SELECT distinct(NH.Nic_Handle) FROM
        NicHandle NH
        <include refid="dynamicCountryJoin" />
        <include refid="dynamicContactTableJoin" />
        <include refid="dynamicTelecomJoin" />
        <include refid="nicHandleCriteria" />
        ) AS CNT
    </select>

    <insert id="insertNicHandle"
        parameterClass="pl.nask.crs.nichandle.dao.ibatis.objects.InternalNicHandle">
        INSERT INTO NicHandle(
        Nic_Handle,
        NH_Name,
        A_Number,
        Co_Name,
        NH_Address,
        Country_Id,
        County_Id,
        NH_Email,
        NH_Status,
        NH_Status_TS,
        NH_Reg_TS,
        NH_Change_TS,
        NH_BillC_Ind,
        NH_Remark,
        NH_Creator,
        Vat_Category,
        Vat_Reg_Id,
        NH_Exported
        ) VALUES (
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #name,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #accountNumber#,
        #companyName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #address,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #country.id#,
        #county.id#,
        #email,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #status,handler=pl.nask.crs.nichandle.dao.ibatis.handlers.NicHandleStatusHandler#,
        #statusChangeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #registrationDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #changeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #billCInd,handler=pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler#,
        #nicHandleRemark,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #creator,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #vatCategory,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #vatNo,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #exported,handler=pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler#
        )
    </insert>

    <update id="updateNicHandleUsingHistory" parameterClass="long">
        UPDATE
        NicHandle NH
        LEFT JOIN NicHandleHist NHH ON NHH.Nic_Handle = NH.Nic_Handle
        LEFT JOIN AccountHist AH ON AH.Chng_ID = NHH.Account_Chng_ID
        SET
        NH.NH_Name = NHH.NH_Name,
        NH.A_Number = AH.A_Number,
        NH.Co_Name = NHH.Co_Name,
        NH.NH_Address = NHH.NH_Address,
        NH.Country_Id = NHH.Country_Id,
        NH.County_Id = NHH.County_Id,
        NH.NH_Email = NHH.NH_Email,
        NH.NH_Status = NHH.NH_Status,
        NH.NH_Status_TS = NHH.NH_Status_TS,
        NH.NH_Reg_TS = NHH.NH_Reg_TS,
        NH.NH_Change_TS = NHH.NH_Change_TS,
        NH.NH_BillC_Ind = NHH.NH_BillC_Ind,
        NH.NH_Remark = NHH.NH_Remark,
        NH.NH_Creator = NHH.NH_Creator,
        NH.Vat_Category = NHH.Vat_Category,
        NH.Vat_Reg_Id = NHH.Vat_Reg_Id,
        NH.NH_Exported = NHH.NH_Exported,
        NH.Chng_ID = NHH.Chng_ID
        WHERE
        NHH.Chng_ID = #changeId#
    </update>

    <insert id="insertTelecomsUsingHistory" parameterClass="long">
        INSERT INTO Telecom(
        Nic_Handle,
        Phone,
        Type,
        `Order`
        ) SELECT
        Nic_Handle,
        Phone,
        Type,
        `Order`
        FROM
        TelecomHist
        WHERE
        Chng_ID = #changeId#
    </insert>

    <delete id="deleteTelecoms" parameterClass="java.lang.String">
        DELETE FROM
        Telecom
        WHERE
        Nic_Handle = #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </delete>

    <delete id="deleteTelecomsByChangeId" parameterClass="long">
        DELETE T.* FROM
        Telecom T
        LEFT JOIN NicHandleHist NHH ON NHH.Nic_Handle = T.Nic_Handle
        WHERE
        NHH.Chng_ID = #changeId#
    </delete>

    <delete id="deleteContacts" parameterClass="java.lang.String">
        DELETE FROM
        Contact
        WHERE
        Contact_NH =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </delete>

    <delete id="deleteAccess" parameterClass="java.lang.String">
        DELETE FROM
        Access
        WHERE
        Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </delete>

    <delete id="deleteNicHandle" parameterClass="java.lang.String">
        DELETE FROM
        NicHandle
        WHERE
        Nic_Handle =
        #nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </delete>

    <select id="findDeleted" resultMap="common.normalizedString">
        select Nic_Handle from
        NicHandle where NH_Status = 'Deleted'
    </select>

    <select id="findBillingNH" parameterClass="string"
        resultMap="common.normalizedString">
        select
        distinct BC.Contact_NH as Nic_Handle
        from
        Contact
        C join Contact BC on (C.D_Name = BC.D_Name)
        where
        C.Contact_NH =
        #nicHandle# and C.Type != 'Billing' and BC.Type = 'Billing';
    </select>
</sqlMap>
