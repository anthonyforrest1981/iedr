<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="ticket-reports">

    <resultMap id="ticketReportResult" class="pl.nask.crs.reports.TicketReport">
        <result property="hostmasterName" column="hostmasterName"
                typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="ticketRevisionsCount" column="ticketRevisionsCount" />
        <result property="ticketType" column="ticketType" />
        <result property="reportForDate" column="reportForDate" />
    </resultMap>

    <sql id="selectReport">
        SELECT
        COUNT(*) as ticketRevisionsCount,
        CheckedOutTo.Nic_Handle as hostmasterName,
        TH.T_Type as ticketType,
        TH.T_Change_TS as reportForDate
        FROM TicketHist as TH
        LEFT JOIN NicHandleHist as CheckedOutTo ON (CheckedOutTo.Chng_ID = TH.CheckedOutTo_NH_Chng_ID)
    </sql>

    <sql id="selectReport4count">
        SELECT
        CheckedOutTo.Nic_Handle as hostmasterName,
        TH.T_Type as ticketType,
        TH.T_Change_TS as reportForDate
        FROM TicketHist as TH
        LEFT JOIN NicHandleHist as CheckedOutTo ON (CheckedOutTo.Chng_ID = TH.CheckedOutTo_NH_Chng_ID)
    </sql>

    <sql id="frag">
        <dynamic>
            <isNotNull prepend="and" property="criteria.hostmasterName">
                CheckedOutTo.Nic_Handle =
                #criteria.hostmasterName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.from">
                TH.T_Change_TS >=
                #criteria.from,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.to">
                TH.T_Change_TS <![CDATA[<=]]>
                #criteria.to,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#
            </isNotNull>
        </dynamic>
    </sql>

    <sql id="getTicketReport">
        <include refid="ticket-reports.selectReport" />
        WHERE
        TH.CheckedOut = 'YES'
        <include refid="ticket-reports.frag" />
    </sql>

    <sql id="getTicketReport4count">
        <include refid="ticket-reports.selectReport4count" />
        WHERE
        TH.CheckedOut = 'YES'
        <include refid="ticket-reports.frag" />
    </sql>

    <select id="getTicketReportsDayGranulation" parameterClass="java.util.Map" resultMap="ticketReportResult">
        <include refid="ticket-reports.getTicketReport" />
        GROUP BY hostmasterName, ticketType, DATE_FORMAT(reportForDate, '%Y %M %D')
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="getTicketReportsMonthGranulation" parameterClass="java.util.Map" resultMap="ticketReportResult">
        <include refid="ticket-reports.getTicketReport" />
        GROUP BY hostmasterName, ticketType, DATE_FORMAT(reportForDate, '%Y %M')
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="getTicketReportsYearGranulation" parameterClass="java.util.Map" resultMap="ticketReportResult">
        <include refid="ticket-reports.getTicketReport" />
        GROUP BY hostmasterName, ticketType, YEAR(reportForDate)
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="getTicketReportsCountDayGranulation" parameterClass="java.util.Map" resultClass="int">
        SELECT COUNT(*)
        FROM (
        <include refid="ticket-reports.getTicketReport4count" />
        GROUP BY hostmasterName, ticketType, DATE_FORMAT(reportForDate, '%Y %M %D')
        ) as total
    </select>

    <select id="getTicketReportsCountMonthGranulation" parameterClass="java.util.Map" resultClass="int">
        SELECT COUNT(*)
        FROM (
        <include refid="ticket-reports.getTicketReport4count" />
        GROUP BY hostmasterName, ticketType, DATE_FORMAT(reportForDate, '%Y %M')
        ) as total
    </select>

    <select id="getTicketReportsCountYearGranulation" parameterClass="java.util.Map" resultClass="int">
        SELECT COUNT(*)
        FROM (
        <include refid="ticket-reports.getTicketReport4count" />
        GROUP BY hostmasterName, ticketType, YEAR(reportForDate)
        ) as total
    </select>

</sqlMap>
