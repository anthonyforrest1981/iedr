<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="secondary-market-historical-buy-request">

    <resultMap id="buyRequestHistObj" extends="secondary-market-buy-request.buyRequestNoTelecoms"
               class="pl.nask.crs.secondarymarket.BuyRequest">
        <result property="telecoms" column="buyHistChangeId"
                select="secondary-market-historical-buy-request.getTelecoms"/>
    </resultMap>

    <resultMap id="buyRequestHist" class="pl.nask.crs.history.HistoricalObject">
        <result property="object" resultMap="secondary-market-historical-buy-request.buyRequestHistObj" />
        <result property="changeId" column="buyHistChangeId" />
        <result property="changedBy" column="buyHistChangedBy"
                typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="changeDate" column="buyHistChangeDate" />
    </resultMap>

    <sql id="selectHistBuyRequest">
        SELECT
        hbr.Id as buyId,
        DomainHist.D_Name as domainName,
        hbr.D_Name_FR as domainNameFR,
        creatornh.Nic_Handle as buyCreatorNH,
        AccountHist.A_Number as accountId,
        AccountHist.A_Name as accountName,
        billingnh.Nic_Handle as accountBillingContactId,
        AccountHist.Web_Address as accountWebAddress,
        AccountHist.A_Status as accountStatus,
        AccountHist.A_Status_TS as statusChangeDate,
        AccountHist.A_Reg_TS as accountCreationDate,
        AccountHist.Agreement_Signed as accountAgreementSigned,
        AccountHist.Ticket_Edit as accountTicketEdit,
        AccountHist.A_Change_TS as accountChangeDate,
        AccountHist.A_Remarks as accountRemark,
        hbr.D_Holder as domainHolder,
        hbr.D_Holder_FR as domainHolderFR,
        hbr.Class_Id as classId,
        hbr.Class_FR as holderClassFR,
        Class.Name as className,
        hbr.Category_Id as categoryId,
        hbr.Category_FR as holderCategoryFR,
        Category.Name as categoryName,
        hbr.Remark as remark,
        hbr.H_Remark as hostmasterRemark,
        hbr.Admin_Name as adminName,
        hbr.Admin_Name_FR as adminNameFR,
        hbr.Admin_Email as adminEmail,
        hbr.Admin_Email_FR as adminEmailFR,
        hbr.Admin_Co_Name as adminCompanyName,
        hbr.Admin_Co_Name_FR as adminCompanyNameFR,
        hbr.Admin_Address as adminAddress,
        hbr.Admin_Address_FR as adminAddressFR,
        hbr.Admin_Country_Id as countryId,
        hbr.Admin_Country_FR as adminCountryFR,
        Countries.Name as countryName,
        Countries.vat_category as countryVatCategory,
        hbr.Admin_County_Id as countyId,
        hbr.Admin_County_FR as adminCountyFR,
        Counties.Name as countyName,
        hbr.Admin_Phones_FR as phonesFR,
        hbr.Admin_Faxes_FR as faxesFR,
        hbr.Created_TS as buyCreationDate,
        hbr.Authcode as authcode,
        hbr.Authcode_TS as authcodeDate,
        checkednh.Nic_Handle as checkedOutTo,
        hbr.Status as buyStatus,
        hbr.Chng_ID as buyHistChangeId,
        hbr.Chng_NH as buyHistChangedBy,
        hbr.Chng_TS as buyHistChangeDate
        FROM SecondaryMarketBuyRequestHist hbr
        LEFT JOIN Countries ON Countries.Id = hbr.Admin_Country_Id
        LEFT JOIN Counties ON Counties.Id = hbr.Admin_County_Id
        LEFT JOIN Class ON Class.id = hbr.Class_Id
        LEFT JOIN Category ON Category.id = hbr.Category_Id
        LEFT JOIN DomainHist ON DomainHist.Chng_ID = hbr.Domain_Chng_ID
        LEFT JOIN AccountHist ON AccountHist.Chng_ID = hbr.Account_Chng_ID
        LEFT JOIN NicHandleHist creatornh ON creatornh.Chng_ID = hbr.Creator_NH_Chng_ID
        LEFT JOIN NicHandleHist checkednh ON checkednh.Chng_ID = hbr.CheckedOutTo_Chng_ID
        LEFT JOIN NicHandleHist billingnh ON billingnh.Chng_ID = AccountHist.Billing_NH_Chng_ID
    </sql>

    <select id="get" resultMap="buyRequestHist">
        <include refid="selectHistBuyRequest" />
        WHERE hbr.Chng_ID = #changeId#
    </select>

    <select id="getTelecoms" resultMap="secondary-market-buy-request.buyRequestTelecom">
        SELECT
            brht.Number as telecomNumber,
            brht.Type as telecomType,
            brht.`Order` as telecomOrder
        FROM SecondaryMarketBuyRequestTelecomHist brht
        WHERE BuyRequest_Chng_ID = #id#
    </select>

    <insert id="create">
        INSERT INTO SecondaryMarketBuyRequestHist(
            Id,
            Domain_Chng_ID,
            D_Name_FR,
            Creator_NH_Chng_ID,
            Account_Chng_ID,
            D_Holder,
            D_Holder_FR,
            Class_Id,
            Class_FR,
            Category_Id,
            Category_FR,
            Remark,
            H_Remark,
            Admin_Name,
            Admin_Name_FR,
            Admin_Email,
            Admin_Email_FR,
            Admin_Co_Name,
            Admin_Co_Name_FR,
            Admin_Address,
            Admin_Address_FR,
            Admin_Country_Id,
            Admin_Country_FR,
            Admin_County_Id,
            Admin_County_FR,
            Admin_Phones_FR,
            Admin_Faxes_FR,
            Created_TS,
            Authcode,
            Authcode_TS,
            CheckedOutTo_Chng_ID,
            Status,
            Chng_TS,
            Chng_NH
        ) VALUES (
            #object.id#,
            (SELECT Chng_ID FROM Domain WHERE D_Name = #object.domainName#),
            #object.domainNameFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            (SELECT Chng_ID FROM NicHandle WHERE Nic_Handle = #object.creatorNH#),
            (SELECT Chng_ID FROM Account WHERE A_Number = #object.account.id#),
            #object.domainHolder,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.domainHolderFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.holderClass.id#,
            #object.holderClassFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.holderCategory.id#,
            #object.holderCategoryFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.remark,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.hostmasterRemark,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.adminName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.adminNameFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.adminEmail,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.adminEmailFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.adminCompanyName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.adminCompanyNameFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.adminAddress,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.adminAddressFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.adminCountry.id#,
            #object.adminCountryFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.adminCounty.id#,
            #object.adminCountyFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.phonesFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.faxesFR,handler=pl.nask.crs.ticket.dao.ibatis.handlers.FailureReasonHandler#,
            #object.creationDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            #object.authcode,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.authcodeCreationDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            (SELECT Chng_ID FROM NicHandle WHERE Nic_Handle = #object.checkedOutTo#),
            #object.status,handler=pl.nask.crs.secondarymarket.dao.ibatis.handlers.BuyRequestStatusHandler#,
            #changeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            #changedBy,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        )
        <selectKey resultClass="long" keyProperty="changeId">
            SELECT LAST_INSERT_ID() AS changeId
        </selectKey>
    </insert>

    <insert id="createTelecoms">
        INSERT INTO SecondaryMarketBuyRequestTelecomHist (
            BuyRequest_Chng_ID,
            Number,
            Type,
            `Order`
        ) VALUES
        <iterate property="object.telecoms" conjunction=",">
            (
            #changeId#,
            #object.telecoms[].value,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
            #object.telecoms[].type,handler=pl.nask.crs.nichandle.dao.ibatis.handlers.TelecomTypeHandler#,
            #object.telecoms[].order#
            )
        </iterate>
    </insert>

    <sql id="buyRequestHistCriteria">
        <dynamic prepend="where">
            <isNotNull prepend="and" property="criteria.buyRequestId">
                hbr.Id = #criteria.buyRequestId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainName">
                DomainHist.D_Name like
                #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainHolder">
                hbr.D_Holder like
                #criteria.domainHolder,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.accountId">
                AccountHist.A_Number = #criteria.accountId#
            </isNotNull>
        </dynamic>
    </sql>

    <select id="findHistBuyRequests" parameterClass="java.util.Map"
            resultMap="buyRequestHist">
        <include refid="selectHistBuyRequest" />
        <include refid="buyRequestHistCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="countHistBuyRequests" resultClass="int">
        SELECT COUNT(*)
        FROM SecondaryMarketBuyRequestHist hbr
        LEFT JOIN DomainHist ON DomainHist.Chng_ID = hbr.Domain_Chng_ID
        LEFT JOIN AccountHist ON AccountHist.Chng_ID = hbr.Account_Chng_ID
        <include refid="buyRequestHistCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

</sqlMap>
