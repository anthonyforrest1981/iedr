<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="dsm">
    <typeAlias alias="DsmTransition" type="pl.nask.crs.domains.dsm.DsmTransition" />

    <resultMap id="transition" class="DsmTransition">
        <result property="targetState" column="endState" />
        <result property="internalActions" column="id"
            select="dsm.getActions" />
    </resultMap>

    <resultMap id="action"
        class="pl.nask.crs.domains.dsm.actions.InternalDsmAction">
        <result property="actionName" column="actionName"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="actionParam" column="actionParam"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="executeAfterDsmChange" column="executeAfterDsmChange"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
    </resultMap>

    <!-- Count events valid for the given domain state. -->
    <select id="countEvents" parameterClass="java.util.Map"
        resultClass="int">
        select count(*)
        from DSM_Transition as Trans
        JOIN
        DSM_Event as Event ON (Trans.Event_Id = Event.Id)
        JOIN Domain as
        Domain ON (Trans.Begin_State = Domain.DSM_State)
        WHERE
        Trans.Begin_State = Domain.DSM_State
        AND
        Event.Name =
        #criteria.eventName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        AND
        Domain.D_Name =
        #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </select>

    <!-- find the transition valid for the given event and domain state -->
    <select id="getTransition" parameterClass="java.util.Map"
        resultMap="transition">
        SELECT
        Trans.Id as id,
        End_State as endState
        FROM
        DSM_Transition as Trans
        JOIN DSM_Event as Event ON
        (Trans.Event_Id = Event.Id)
        JOIN Domain as Domain ON
        (Trans.Begin_State = Domain.DSM_State)
        WHERE
        Trans.Begin_State =
        Domain.DSM_State
        AND
        Event.Name =
        #criteria.eventName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        AND
        Domain.D_Name =
        #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </select>

    <select id="getActions" parameterClass="java.lang.Integer"
        resultMap="action">
        SELECT
        Action_Name as actionName,
        Action_Param as
        actionParam,
        Execute_After_DSM_Change as executeAfterDsmChange
        FROM DSM_Action as A
        JOIN DSM_Transition_Action as TrAc ON (A.Id = TrAc.Action_Id)
        WHERE
        TrAc.Transition_Id = #id#
        ORDER BY
        TrAc.Order ASC
    </select>

    <!-- return event names which are valid in the given domain state -->
    <select id="getEventNames" parameterClass="java.util.Map"
        resultMap="common.normalizedString">
        SELECT Event.Name as eventName
        FROM DSM_Transition as
        Trans
        JOIN Domain as Domain ON (Trans.Begin_State =
        Domain.DSM_State)
        JOIN DSM_Event as Event ON (Trans.Event_Id =
        Event.Id)
        WHERE
        Trans.Begin_State = Domain.DSM_State
        AND
        Domain.D_Name =
        #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
    </select>
</sqlMap>

