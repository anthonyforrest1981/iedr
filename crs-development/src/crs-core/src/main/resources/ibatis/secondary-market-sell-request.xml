<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="secondary-market-sell-request">

    <resultMap id="sellRequest" class="pl.nask.crs.secondarymarket.SellRequest">
        <result property="id" column="sellId" />
        <result property="creatorNH" column="sellCreatorNH" />
        <result property="creationDate" column="sellCreationDate" />
        <result property="status" column="sellStatus"
                typeHandler="pl.nask.crs.secondarymarket.dao.ibatis.handlers.SellRequestStatusHandler" />
    </resultMap>

    <resultMap id="sellRequestObject" extends="sellRequest" class="pl.nask.crs.secondarymarket.SellRequest">
        <result property="buyRequest" resultMap="secondary-market-buy-request.buyRequest" />
    </resultMap>

    <sql id="selectRequest">
        SELECT
            s.Id as sellId,
            s.Creator_NH as sellCreatorNH,
            s.Created_TS as sellCreationDate,
            s.Status as sellStatus,
            b.Id as buyId,
            b.D_Name as domainName,
            b.D_Name_FR as domainNameFR,
            b.Creator_NH as buyCreatorNH,
            a.A_Number as accountId,
            a.A_Name as accountName,
            a.Billing_NH as accountBillingContactId,
            a.Web_Address as accountWebAddress,
            a.A_Status as accountStatus,
            a.A_Status_TS as statusChangeDate,
            a.A_Reg_TS as accountCreationDate,
            a.Agreement_Signed as accountAgreementSigned,
            a.Ticket_Edit as accountTicketEdit,
            a.A_Change_TS as accountChangeDate,
            a.A_Remarks as accountRemark,
            b.D_Holder as domainHolder,
            b.D_Holder_FR as domainHolderFR,
            b.Class_Id as classId,
            b.Class_FR as holderClassFR,
            cl.Name as className,
            b.Category_Id as categoryId,
            b.Category_FR as holderCategoryFR,
            ct.Name as categoryName,
            b.Remark as remark,
            b.H_Remark as hostmasterRemark,
            b.Admin_Name as adminName,
            b.Admin_Name_FR as adminNameFR,
            b.Admin_Email as adminEmail,
            b.Admin_Email_FR as adminEmailFR,
            b.Admin_Co_Name as adminCompanyName,
            b.Admin_Co_Name_FR as adminCompanyNameFR,
            b.Admin_Address as adminAddress,
            b.Admin_Address_FR as adminAddressFR,
            b.Admin_Country_Id as countryId,
            b.Admin_Country_FR as adminCountryFR,
            cntr.Name as countryName,
            cntr.vat_category as countryVatCategory,
            b.Admin_County_Id as countyId,
            b.Admin_County_FR as adminCountyFR,
            cnt.Name as countyName,
            b.Admin_Phones_FR as phonesFR,
            b.Admin_Faxes_FR as faxesFR,
            b.Created_TS as buyCreationDate,
            b.Authcode as authcode,
            b.Authcode_TS as authcodeDate,
            b.CheckedOutTo_NH as checkedOutTo,
            b.Status as buyStatus,
            bh.Chng_TS as buyHistChangeDate
        FROM SecondaryMarketSellRequest s
        LEFT JOIN SecondaryMarketBuyRequest b ON b.Id = s.BuyRequest_Id
        LEFT JOIN Account a ON a.A_Number = b.A_Number
        LEFT JOIN Countries cntr ON cntr.Id = b.Admin_Country_Id
        LEFT JOIN Counties cnt ON cnt.Id = b.Admin_County_Id
        LEFT JOIN Class cl ON cl.id = b.Class_Id
        LEFT JOIN Category ct ON ct.id = b.Category_Id
        LEFT JOIN SecondaryMarketBuyRequestHist bh ON bh.Chng_ID = b.Chng_ID
    </sql>

    <select id="getRequest" resultMap="sellRequestObject">
        <include refid="selectRequest" />
        WHERE s.Id = #Id#
    </select>

    <select id="lock" parameterClass="long" resultClass="long">
        SELECT Id as sellId
        FROM SecondaryMarketSellRequest
        WHERE Id = #Id#
        FOR UPDATE
    </select>

    <sql id="searchCriteria">
        <dynamic prepend="where">
            <isNotNull prepend="and" property="criteria.sellRequestId">
                s.Id = #criteria.sellRequestId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainName">
                b.D_Name like #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.creatorNH">
                s.Creator_NH like #criteria.creatorNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.createdFrom">
                s.Created_TS >=
                #criteria.createdFrom,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.createdTo">
                s.Created_TS <![CDATA[<=]]>
                #criteria.createdTo,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainHolder">
                b.D_Holder like
                #criteria.domainHolder,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.accountId">
                b.A_Number = #criteria.accountId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.buyRequestId">
                b.Id = #criteria.buyRequestId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.contactNH">
                (s.Creator_NH like #criteria.contactNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
                OR c.Contact_NH like #criteria.contactNH,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#)
            </isNotNull>
        </dynamic>
    </sql>

    <select id="findRequests" resultMap="sellRequestObject">
        <include refid="selectRequest" />
        <dynamic>
            <isNotNull property="criteria.contactNH">
                LEFT JOIN Contact c ON c.D_Name = b.D_Name AND c.Type IN ('Billing', 'Admin', 'Tech')
            </isNotNull>
        </dynamic>
        <include refid="searchCriteria" />
        <dynamic>
            <isNotNull property="criteria.contactNH">
                GROUP BY b.Id
            </isNotNull>
        </dynamic>
        <include refid="common.sortFrag"/>
        <include refid="common.limitFrag"/>
    </select>

    <select id="countRequests" resultClass="int">
        SELECT COUNT(DISTINCT b.Id)
        FROM SecondaryMarketSellRequest s
        LEFT JOIN SecondaryMarketBuyRequest b ON b.Id = s.BuyRequest_Id
        <dynamic>
            <isNotNull property="criteria.contactNH">
                LEFT JOIN Contact c ON c.D_Name = b.D_Name AND c.Type IN ('Billing', 'Admin', 'Tech')
            </isNotNull>
        </dynamic>
        <include refid="searchCriteria" />
    </select>

    <update id="updateUsingHistory" parameterClass="long">
        UPDATE SecondaryMarketSellRequest s
        LEFT JOIN SecondaryMarketSellRequestHist sh ON sh.Id = s.Id
        LEFT JOIN NicHandleHist nh ON nh.Chng_ID = sh.Creator_NH_Chng_ID
        LEFT JOIN SecondaryMarketBuyRequestHist bh ON bh.Chng_ID = sh.BuyRequest_Chng_ID
        SET
            s.Creator_NH = nh.Nic_Handle,
            s.Created_TS = sh.Created_TS,
            s.BuyRequest_Id = bh.Id,
            s.Status = sh.Status,
            s.Chng_ID = sh.Chng_ID
        WHERE
            sh.Chng_ID = #changeId#
    </update>

    <insert id="createRequest" parameterClass="pl.nask.crs.secondarymarket.SellRequest">
        INSERT INTO SecondaryMarketSellRequest(
            Creator_NH,
            Created_TS,
            Status,
            BuyRequest_Id
        ) VALUES (
            #creatorNH#,
            #creationDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            #status,handler=pl.nask.crs.secondarymarket.dao.ibatis.handlers.SellRequestStatusHandler#,
            #buyRequest.id#
        )
        <selectKey resultClass="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <delete id="delete" parameterClass="long">
        DELETE FROM SecondaryMarketSellRequest
        WHERE Id = #Id#
    </delete>

</sqlMap>
