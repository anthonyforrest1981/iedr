<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="historicalUser">

    <resultMap id="historicalUser" class="pl.nask.crs.user.dao.ibatis.objects.InternalHistoricalUser">
        <result property="changeId" column="changeId" />
        <result property="username" column="username"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="password" column="password"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="level" column="level" />
        <result property="internal" column="internal" />
        <result property="salt" column="salt"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="passwordChangeDate" column="passwordChangeDate" />
        <result property="useTwoFactorAuthentication" column="useTwoFactorAuthentication"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler" />
        <result property="secret" column="secret"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="name" column="name"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.StringHandler" />
        <result property="changedBy" column="changedBy"
            typeHandler="pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler" />
        <result property="changeDate" column="changeDate" />
    </resultMap>

    <sql id="conditions">
        <dynamic prepend="WHERE">
            <isNotNull prepend="and" property="criteria.nicHandleId">
                NHH.Nic_Handle =
                #criteria.nicHandleId,handler=pl.nask.crs.commons.dao.ibatis.handlers.LooseStringHandler#
            </isNotNull>
        </dynamic>
    </sql>

    <select id="find" resultMap="historicalUser">
        SELECT
        AH.Chng_ID as changeId,
        NHH.Nic_Handle as username,
        AH.NH_Password as password,
        AH.NH_Level as level,
        AH.Internal as internal,
        AH.Salt as salt,
        AH.password_change_TS as passwordChangeDate,
        AH.Force_Password_Change as forcePasswordChange,
        AH.use_two_factor_authentication as useTwoFactorAuthentication,
        AH.Secret as secret,
        NHH.NH_Name as name,
        AH.Chng_NH as changedBy,
        AH.Chng_TS as changeDate
        FROM AccessHist AH
        LEFT JOIN NicHandleHist NHH ON NHH.Chng_ID = AH.Nic_Handle_Chng_ID
        <include refid="conditions" />
        ORDER BY AH.Chng_ID DESC
        <include refid="common.limitFrag" />
    </select>

    <select id="countFind" resultClass="int">
        SELECT
        count(*)
        FROM
        AccessHist AH
        LEFT JOIN NicHandleHist NHH ON NHH.Chng_ID = AH.Nic_Handle_Chng_ID
        <include refid="conditions" />
    </select>

    <insert id="createHistoricalUser"
        parameterClass="pl.nask.crs.user.dao.ibatis.objects.InternalHistoricalUser">
        INSERT INTO AccessHist (
        Nic_Handle_Chng_ID,
        NH_Password,
        NH_Level,
        Internal,
        Salt,
        password_change_TS,
        Force_Password_Change,
        use_two_factor_authentication,
        Secret,
        Chng_TS,
        Chng_NH
        ) VALUES (
        (SELECT Chng_ID FROM NicHandle WHERE Nic_Handle =
            #username,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#),
        #password,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #level#,
        #internal,handler=pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler#,
        #salt,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #passwordChangeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #forcePasswordChange,handler=pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler#,
        #useTwoFactorAuthentication,handler=pl.nask.crs.commons.dao.ibatis.handlers.CharToBooleanHandler#,
        #secret,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#,
        #changeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
        #changedBy,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        )
        <selectKey keyProperty="changeId" resultClass="long">
            SELECT LAST_INSERT_ID() AS changeId
        </selectKey>
    </insert>

</sqlMap>
