<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "sql-map-2.dtd">

<sqlMap namespace="secondary-market-historical-sell-request">

    <resultMap id="sellRequestObjectForHistory" extends="secondary-market-sell-request.sellRequest"
               class="pl.nask.crs.secondarymarket.SellRequest">
        <result property="buyRequest" resultMap="secondary-market-historical-buy-request.buyRequestHistObj" />
    </resultMap>

    <resultMap id="historicalSellRequest" class="pl.nask.crs.history.HistoricalObject">
        <result property="object" resultMap="secondary-market-historical-sell-request.sellRequestObjectForHistory" />
        <result property="changeId" column="sellHistChangeId" />
        <result property="changedBy" column="sellHistChangedBy" />
        <result property="changeDate" column="sellHistChangeDate" />
    </resultMap>

    <sql id="selectHistoricalSellRequest">
        SELECT
            sh.Id as sellId,
            snh.Nic_Handle as sellCreatorNH,
            sh.Created_TS as sellCreationDate,
            sh.Status as sellStatus,
            sh.Chng_ID as sellHistChangeId,
            sh.Chng_NH as sellHistChangedBy,
            sh.Chng_TS as sellHistChangeDate,
            bh.Id as buyId,
            dh.D_Name as domainName,
            bh.D_Name_FR as domainNameFR,
            bnh.Nic_Handle as buyCreatorNH,
            ah.A_Number as accountId,
            ah.A_Name as accountName,
            anh.Nic_Handle as accountBillingContactId,
            ah.Web_Address as accountWebAddress,
            ah.A_Status as accountStatus,
            ah.A_Status_TS as statusChangeDate,
            ah.A_Reg_TS as accountCreationDate,
            ah.Agreement_Signed as accountAgreementSigned,
            ah.Ticket_Edit as accountTicketEdit,
            ah.A_Change_TS as accountChangeDate,
            ah.A_Remarks as accountRemark,
            bh.D_Holder as domainHolder,
            bh.D_Holder_FR as domainHolderFR,
            bh.Class_Id as classId,
            bh.Class_FR as holderClassFR,
            cl.Name as className,
            bh.Category_Id as categoryId,
            bh.Category_FR as holderCategoryFR,
            ct.Name as categoryName,
            bh.Remark as remark,
            bh.H_Remark as hostmasterRemark,
            bh.Admin_Name as adminName,
            bh.Admin_Name_FR as adminNameFR,
            bh.Admin_Email as adminEmail,
            bh.Admin_Email_FR as adminEmailFR,
            bh.Admin_Co_Name as adminCompanyName,
            bh.Admin_Co_Name_FR as adminCompanyNameFR,
            bh.Admin_Address as adminAddress,
            bh.Admin_Address_FR as adminAddressFR,
            bh.Admin_Country_Id as countryId,
            bh.Admin_Country_FR as adminCountryFR,
            cntr.Name as countryName,
            cntr.vat_category as countryVatCategory,
            bh.Admin_County_Id as countyId,
            bh.Admin_County_FR as adminCountyFR,
            cnt.Name as countyName,
            bh.Admin_Phones_FR as phonesFR,
            bh.Admin_Faxes_FR as faxesFR,
            bh.Created_TS as buyCreationDate,
            bh.Authcode as authcode,
            bh.Authcode_TS as authcodeDate,
            chk.Nic_Handle as checkedOutTo,
            bh.Status as buyStatus,
            bh.Chng_ID as buyHistChangeId,
            bh.Chng_NH as buyHistChangedBy,
            bh.Chng_TS as buyHistChangeDate
        FROM SecondaryMarketSellRequestHist sh
        LEFT JOIN NicHandleHist snh ON snh.Chng_ID = sh.Creator_NH_Chng_ID
        LEFT JOIN SecondaryMarketBuyRequestHist bh ON bh.Chng_ID = sh.BuyRequest_Chng_ID
        LEFT JOIN DomainHist dh ON dh.Chng_ID = bh.Domain_Chng_ID
        LEFT JOIN NicHandleHist bnh ON bnh.Chng_ID = bh.Creator_NH_Chng_ID
        LEFT JOIN AccountHist ah ON ah.Chng_ID = bh.Account_Chng_ID
        LEFT JOIN NicHandleHist anh ON anh.Chng_ID = ah.Billing_NH_Chng_ID
        LEFT JOIN Countries cntr ON cntr.Id = bh.Admin_Country_Id
        LEFT JOIN Counties cnt ON cnt.Id = bh.Admin_County_Id
        LEFT JOIN Class cl ON cl.id = bh.Class_Id
        LEFT JOIN Category ct ON ct.id = bh.Category_Id
        LEFT JOIN NicHandleHist chk ON chk.Chng_ID = bh.CheckedOutTo_Chng_ID
    </sql>

    <select id="getHistoricalSellRequest" resultMap="historicalSellRequest">
        <include refid="selectHistoricalSellRequest" />
        WHERE sh.Chng_ID = #changeId#
    </select>

    <insert id="createHistoricalSellRequest">
        INSERT INTO SecondaryMarketSellRequestHist(
            Id,
            Creator_NH_Chng_ID,
            Created_TS,
            Status,
            BuyRequest_Chng_ID,
            Chng_TS,
            Chng_NH
        ) VALUES (
            #object.id#,
            (SELECT nh.Chng_ID FROM NicHandle nh WHERE nh.Nic_Handle = #object.creatorNH#),
            #object.creationDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            #object.status,handler=pl.nask.crs.secondarymarket.dao.ibatis.handlers.SellRequestStatusHandler#,
            (SELECT b.Chng_ID FROM SecondaryMarketBuyRequest b WHERE b.Id = #object.buyRequest.id#),
            #changeDate,handler=pl.nask.crs.commons.dao.ibatis.handlers.TruncatedDateHandler#,
            #changedBy,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringHandler#
        )
        <selectKey resultClass="long" keyProperty="changeId">
            SELECT LAST_INSERT_ID() AS changeId
        </selectKey>
    </insert>

    <sql id="historicalSellRequestCriteria">
        <dynamic prepend="where">
            <isNotNull prepend="and" property="criteria.sellRequestId">
                sh.Id = #criteria.sellRequestId#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainName">
                dh.D_Name like
                #criteria.domainName,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.domainHolder">
                bh.D_Holder like
                #criteria.domainHolder,handler=pl.nask.crs.commons.dao.ibatis.handlers.StringPrefixHandler#
            </isNotNull>
            <isNotNull prepend="and" property="criteria.accountId">
                ah.A_Number = #criteria.accountId#
            </isNotNull>
            <isNotEmpty prepend="and" property="criteria.statuses">
                sh.Status IN
                <iterate property="criteria.statuses" open="(" close=")" conjunction=",">
                    #criteria.statuses[],handler=pl.nask.crs.secondarymarket.dao.ibatis.handlers.SellRequestStatusHandler#
                </iterate>
            </isNotEmpty>
        </dynamic>
    </sql>

    <select id="findHistoricalSellRequests" parameterClass="java.util.Map" resultMap="historicalSellRequest">
        <include refid="selectHistoricalSellRequest" />
        <include refid="historicalSellRequestCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

    <select id="countHistoricalSellRequests" resultClass="int">
        SELECT COUNT(*)
        FROM SecondaryMarketSellRequestHist sh
        LEFT JOIN SecondaryMarketBuyRequestHist bh ON bh.Chng_ID = sh.BuyRequest_Chng_ID
        LEFT JOIN DomainHist dh ON dh.Chng_ID = bh.Domain_Chng_ID
        LEFT JOIN AccountHist ah ON ah.Chng_ID = bh.Account_Chng_ID
        <include refid="historicalSellRequestCriteria" />
        <include refid="common.sortFrag" />
        <include refid="common.limitFrag" />
    </select>

</sqlMap>
